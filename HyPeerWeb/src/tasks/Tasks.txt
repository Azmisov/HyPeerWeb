Other Stuff:
==========================
- Network-name stuff (low priority)
- Optimization
	- minimize network communications
	- group updates into commits
	- optimize Criteria class; esp. find insert/disconnect point
		(e.g., relax HW constraints; will break validator, but be faster)
- Client
	- synchronize node selection between graph-tab/list-tab
	- petrie projection mode for GraphTab
- Concurrency (after optimization)
	- have each segment hold a list of commit operations
	- each commit has a timecode for when the add/remove operation began (timestamp-based control)
	- have algorithm run through list of commits and find a total ordering that guarantees non-conflicting execution
	- segment-cache is prone to concurrency issues (becomes out-of-sync); need a better way to manage this
- Cleanup
	- add assert statements before all methods?
	- write any missing javadoc
	- come up with a way to remove SegmentProxy/NodeProxy duplicate code
	- Make SegmentDB work for other proxies besides NodeProxy
	- make comm.request and commands more generalized/reusable
	- general code improvement...
- RSA signing of application requests
- Make remote-address hook up to the public IP somehow
- Error detection and handling; rollback on failure
- Fix inconsistent bug: after adding nodes and deleting all nodes, if you add more, removing them may fail or fail the validator, but we don't know when it can always fail
- Fix database deserialization when bringing network back online; for some reason, the only way to get it to work again
	is if you click the "Resync" button in the GUI

Questions:
===========================
- should we allow null listeners in HyPeerWebSegment
- do proxies need UID? is there any case we reference node.UID when it would be a proxy
- can we cache fold-state? in node proxies
- what if we send a node across the net that used localhost for IP?
- make sure id/height caching is working properly
- how do we guarantee NodeListener.callback(null) executes on the original machine?
- make Segment.state/Command.methodName stuff private/protected again
